---
import Layout from '../layouts/Layout.astro';

const { rest } = Astro.params;

// Leer JSON del restaurante por slug
let data = null;
try {
  const mod = await import(`../data/restaurants/${rest}.json`);
  data = mod.default;
} catch (e) {
  data = null;
}

// Construir URLs (as√≠ evitamos template strings dentro del HTML)
const menuUrl = Astro.site
  ? new URL('/' + rest, Astro.site).toString()
  : '/' + rest;

const qrUrl =
  'https://api.qrserver.com/v1/create-qr-code/?size=220x220&data=' +
  encodeURIComponent(menuUrl);
---

<Layout title={data ? ('Menu ' + data.nombre) : 'Men√∫ no encontrado'}>
  {data ? (
    <>
      <h1 class="text-3xl font-bold mb-2">üçΩÔ∏è {data.nombre}</h1>

      <!-- QR listo para imprimir -->
      <div class="my-6 flex items-center gap-6">
        <div>
          <p class="text-sm text-slate-400 mb-2">Escan√©ame para abrir este men√∫:</p>
          <img src={qrUrl} alt={`QR de ${data.nombre}`} class="border rounded bg-white p-2" />
        </div>
        <p class="text-slate-400 text-sm break-all">{menuUrl}</p>
      </div>

      {data.categorias?.map((cat) => (
        <section class="mb-10">
          <h2 class="text-2xl mb-4">{cat.titulo}</h2>
          <div class="grid md:grid-cols-3 gap-6">
            {cat.items?.map((it) => (
              <article class="border rounded p-4">
                {it.img && <img src={it.img} alt={it.nombre} class="mb-3 rounded" />}
                <h3 class="font-semibold">{it.nombre}</h3>
                <p class="text-sm text-slate-600">{it.desc}</p>
                <p class="mt-2 font-bold">${it.precio.toLocaleString('es-CL')}</p>
              </article>
            ))}
          </div>
        </section>
      ))}
    </>
  ) : (
    <>
      <h1 class="text-2xl font-bold">Restaurante no encontrado</h1>
      <p class="mt-2 text-slate-400">Verifica la URL o el nombre del archivo JSON en <code>src/data/restaurants/</code>.</p>
    </>
  )}
</Layout>
